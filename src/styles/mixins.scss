@mixin visuallyHidden {
	position: fixed;
	transform: scale(0);
}

@mixin transition($props: "color, background-color") {
	transition-property: #{$props};
	transition-duration: 0.3s;
	transition-timing-function: ease-in-out;
}

@mixin defaultInteractive($active: true) {
	@include transition("opacity");

	@include hoverFocus {
		opacity: 0.6;
	}

	@if $active {
		@include active {
			opacity: 0.3;
		}
	}
}

@mixin customScrollbar($colorThumb: $colorCharcoal, $colorTrack: $colorWhiteSmoke, $scrollbarWidth: 8px) {
	scrollbar-color: $colorThumb $colorTrack;
	scrollbar-width: thin;

	&::-webkit-scrollbar {
		width: $scrollbarWidth;
		height: $scrollbarWidth;
		background-color: $colorTrack;
	}

	&::-webkit-scrollbar-track {
		background-color: $colorTrack;
	}

	&::-webkit-scrollbar-thumb {
		background-color: $colorThumb;
		border: none;
		border-radius: 2px;
	}
}

@mixin viewport {
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	overflow-x: hidden;
	overflow-y: scroll; // Предотвращение скачков вправо-влево при переполнении
	overflow-anchor: none;
	scroll-behavior: smooth;

	@include customScrollbar;

	@include vpMobileXs {
		overflow-x: auto;
	}
}

@mixin button($background: transparent, $border: none, $radius: 0) {
	box-sizing: border-box;
	text-decoration: none;
	overflow-wrap: anywhere;
	text-align: center;
	background-color: $background;
	border: $border;
	border-radius: $radius;
	user-select: none;
}

@mixin listReset($resetMargins: true, $padding: 0) {
	@if $resetMargins {
		margin: 0;
	}

	padding: $padding;
	list-style: none;
}

@mixin container {
	padding-right: 30px;
	padding-left: 30px;

	@include vpTabletDesktop {
		padding-right: 50px;
		padding-left: 50px;
	}

	@include vpDesktop {
		padding-right: $paddingFluid;
		padding-left: $paddingFluid;
	}
}

@mixin mask($icon) {
	mask: url("#{$pathSprite}##{$icon}") no-repeat center / 100%;
}

@mixin hover {
	@media (hover: hover) {
		&:hover {
			@content;
		}
	}
}

@mixin focus($within: false) {
	&:focus-visible {
		@content;
	}

	@if $within {
		&:focus-within {
			@content;
		}
	}

	@supports not selector(:focus-visible) {
		&:focus {
			@content;
		}
	}
}

@mixin hoverFocus($within: false) {
	@include hover {
		@content;
	}

	@include focus($within) {
		@content;
	}
}

@mixin active {
	@media (hover: hover) {
		&:active,
		&:hover:active {
			@content;
		}
	}
}

@mixin retinalBackground($bg) {
	background-image: var(--bg#{$bg});

	@include retina {
		background-image: var(--bg#{$bg}2x);
	}
}

@mixin customBackground($adaptive: true) {
	@if $adaptive {
		@include vpMobile {
			@include retinalBackground("Mobile");
		}

		@include vpTablet {
			@include retinalBackground("Tablet");
		}

		@include vpDesktop {
			@include retinalBackground("Desktop");
		}
	} @else {
		@include retinalBackground("Mobile");
	}
}

@mixin retina {
	@media (min-resolution: 2dppx) {
		@content;
	}
}

@mixin vpMobileXs {
	@media (max-width: ($breakpointMobile - 1px)) {
		@content;
	}
}

@mixin vpMobile {
	@media (max-width: ($breakpointTablet - 1px)) {
		@content;
	}
}

@mixin vpTablet {
	@media (min-width: $breakpointTablet) and (max-width: ($breakpointDesktop - 1px)) {
		@content;
	}
}

@mixin vpMobileTablet {
	@media (max-width: ($breakpointDesktop - 1px)) {
		@content;
	}
}

@mixin vpTabletDesktop {
	@media (min-width: $breakpointTablet) {
		@content;
	}
}

@mixin vpDesktop {
	@media (min-width: $breakpointDesktop) {
		@content;
	}
}
